USE PROJECT
---------CAFE SALES DATASET

SELECT*
FROM CAFE_SALES

---TEA'S SOLD IN CAFE
SELECT DISTINCT
TEA_NAME ,
TEA_PRICE
FROM [CAFE_SALES] ;

----TEA SALES IN EACH MONTH

SELECT
MONTH,
SUM( TEA_SALES) AS TOTAL_TEA_SALES
FROM [CAFE_SALES]
GROUP BY MONTH
ORDER BY TOTAL_TEA_SALES DESC

----INCOME GENERATED BY TEA IN EACH MONTH


SELECT
MONTH,
SUM(TEA_SALES) AS MONTHLY_TEA_SALES ,
SUM(TEA_SALES)* 150 AS TEA_INCOME_MONTHLY
FROM [CAFE_SALES]
GROUP BY MONTH
ORDER BY TEA_INCOME_MONTHLY DESC

------TEA SALES ON WEEKLY BASIS
SELECT
WEEKDAY ,
SUM(TEA_SALES) AS WEEKLY_SALES
FROM [CAFE_SALES]
GROUP BY WEEKDAY
ORDER BY WEEKLY_SALES DESC


------TEA SALES ON HOURLY BASIS 
SELECT
TEA_HOUR,
SUM(TEA_SALES) AS HOURLY_SALES
FROM [CAFE_SALES]
GROUP BY TEA_HOUR
ORDER BY HOURLY_SALES DESC

--------DIFFERENT COOKIES AND THEIR PRICE IN CAFE
SELECT DISTINCT
COOKIES_TYPE,
COOKIES_PRICE
FROM [CAFE_SALES]
ORDER BY COOKIES_PRICE 


-----SALES GENERATED BY EACH COOKY TYPE IN A YEAR
SELECT DISTINCT
COOKIES_TYPE,
SUM(C_SALES ) AS TOTALSALES
FROM [CAFE_SALES]
GROUP BY COOKIES_TYPE
ORDER BY TOTALSALES DESC

USE PROJECT
SELECT 
COOKIES_TYPE,
COOKIES_PRICE ,
SUM(C_SALES) AS TOTALSALES,
ROUND(SUM(C_SALES)* COOKIES_PRICE , -3) AS COOKIES_INCOME
FROM [CAFE_SALES] 
GROUP BY COOKIES_TYPE ,COOKIES_PRICE
ORDER BY TOTALSALES        


SELECT 
COOKIES_TYPE,
COOKIES_PRICE ,
SUM(C_SALES) AS TOTALSALES,
ROUND(SUM(C_SALES)* COOKIES_PRICE , -3) AS COOKIES_INCOME
FROM [CAFE_SALES] 
GROUP BY COOKIES_TYPE ,COOKIES_PRICE
ORDER BY COOKIES_INCOME  
---ABOVE   TWO SQL comparision  enables owner to  invest on cookies which is on more customer demand as well as one which gives more returns

---LIST OF SNACK ITEMS AVAILABLE IN CAFE

SELECT 
SNACKS ,
S_PRICE
FROM CAFE_SALES
GROUP BY SNACKS, S_PRICE
ORDER BY S_PRICE 

---SNACKS SALES BASED ON WEEKDAY
SELECT
WEEKDAY,
SUM(S_SALES) AS WEEKLY_BASED_SALES
FROM CAFE_SALES
GROUP BY WEEKDAY
ORDER BY WEEKLY_BASED_SALES

---SALES OF DIFFERENT SNACKS IN EACH MONTH [EG - JUNE]
SELECT
SNACKS,
SUM(S_SALES) AS MONTHLY_S_SALES
FROM CAFE_SALES
WHERE MONTH='6'
GROUP BY SNACKS , MONTH
ORDER BY MONTHLY_S_SALES

----SALES OF PARTICULAR SNACK[ EG: VEG PUFF] IN DIFFERENT MONTHS
SELECT
MONTH,
SUM(S_SALES) AS MONTHLY_SALES
FROM CAFE_SALES
WHERE SNACKS ='VEG PUFF'
GROUP BY MONTH
ORDER BY MONTHLY_SALES DESC

---SALES OF  ALL DIFFERENT SNACKS IN A YEAR
SELECT
SNACKS,
SUM(S_SALES) AS TOTAL_S_SALES
FROM CAFE_SALES
GROUP BY SNACKS
ORDER BY TOTAL_S_SALES

-----INCOME GENERATED BY  DIFFERENT  SNACKS
SELECT
SNACKS,
S_PRICE,
SUM(S_SALES) AS TOTAL_SALES,
SUM(S_SALES)*S_PRICE AS EACH_SNACK_INCOME
FROM CAFE_SALES
GROUP BY SNACKS , S_PRICE

----SALES OF PASTRIES IN PARTICULAR  MONTH [EG- NOV]
SELECT
PASTRIES_CAKES,
SUM(CAST(CAKES_SALES AS INT)) AS MONTHLY_SALES
FROM CAFE_SALES
WHERE MONTH ='11'
GROUP BY PASTRIES_CAKES
ORDER BY MONTHLY_SALES DESC

-----SALES OF PARTICULAR PASTRY IN ALL MONTHS [ EG-VANILLA CAKE]
SELECT
MONTH,
SUM(CAST(CAKES_SALES AS INT)) AS MONTHLY_SALES
FROM CAFE_SALES
GROUP BY MONTH
ORDER BY MONTHLY_SALES DESC

-----TOTAL SALES OF PASTRIES IN THE YEAR
SELECT
PASTRIES_CAKES,
CAKES_PRICE,
SUM(CAST(CAKES_SALES AS INT))AS TOTAL_SALES
FROM CAFE_SALES
GROUP BY PASTRIES_CAKES , CAKES_PRICE
ORDER BY TOTAL_SALES 


----TEA ROI
SELECT DISTINCT
TEA_NAME,
TEA_PRICE,
SUM(TEA_SALES) AS TOTAL_TEA_SALES,
SUM(TEA_SALES)* TEA_PRICE AS TOTAL_TEA_INCOME
FROM CAFE_SALES
GROUP BY TEA_NAME, TEA_PRICE

----------COOKIES ROI-----------------------------------
SELECT
COUNT(COOKIES_TYPE) AS COOKIES_TYPES,
SUM(COOKIES_PRICE) AS TOTAL_COST_OF_COOKIES_1set,
SUM(TOTAL_SALES) AS COOKIES_TOTAL_SALES,
SUM(TOTAL_INCOME) AS COOKIES_TOTAL_INCOME
FROM
(
SELECT
COOKIES_TYPE,
COOKIES_PRICE,
SUM(C_SALES) AS TOTAL_SALES,
SUM(COOKIES_PRICE*C_SALES) AS TOTAL_INCOME
FROM CAFE_SALES 
GROUP BY COOKIES_TYPE , COOKIES_PRICE
)t

------SNACKS ROI------------------------
SELECT
COUNT(SNACKS) AS SNACKS_TYPES,
SUM(S_PRICE) AS TOTAL_COST_OF_SNACKS_1set,
SUM(TOTAL_SALES) AS TOTAL_SNACK_SALES ,
SUM(TOTAL_INCOME) AS TOTAL_SNACK_INCOME
FROM
(
SELECT
SNACKS,
S_PRICE,
SUM(S_SALES) AS TOTAL_SALES,
SUM(S_PRICE*S_SALES) AS TOTAL_INCOME
FROM CAFE_SALES
GROUP BY SNACKS, S_PRICE
)t


-----------PASTRIES ROI-----------
SELECT
COUNT(PASTRIES_CAKES) AS TOTOTAL_TYPES,
SUM(CAKES_PRICE) AS TOTAL_COST_OF_CAKES_1set,
SUM(TOTAL_SALES) AS TOTAL_PATRIES_SALES,
SUM(TOTAL_INCOME) AS TOTAL_PASTRIES_INCOME
FROM
(
SELECT
PASTRIES_CAKES,
CAKES_PRICE,
SUM(CAST(CAKES_SALES AS INT)) AS TOTAL_SALES,
SUM(CAST(CAKES_SALES AS INT)*CAKES_PRICE) AS TOTAL_INCOME
FROM CAFE_SALES
GROUP BY PASTRIES_CAKES , CAKES_PRICE
)t

